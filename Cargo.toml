[workspace]
members = [
  "tmux-backup"
]

[profile.release]
# Enable link-time optimization (LTO). It’s a kind of whole-program or
# inter-module optimization as it runs as the very last step when linking the
# different parts of your binary together. You can think of it as allowing
# better inlining across dependency boundaries (but it’s of course more
# complicated that that).
#
# Rust can use multiple linker flavors, and the one we want is “optimize across
# all crates”, which is called “fat”. To set this, add the lto flag to your
# profile:
lto = "fat"

# To speed up compile times, Rust tries to split your crates into small chunks
# and compile as many in parallel as possible. The downside is that there’s
# less opportunities for the compiler to optimize code across these chunks. So,
# let’s tell it to do one chunk per crate:
codegen-units = 1

# Rust by default uses stack unwinding (on the most common platforms). That
# costs performance, so let’s skip stack traces and the ability to catch panics
# for reduced code size and better cache usage:
panic = "abort"
